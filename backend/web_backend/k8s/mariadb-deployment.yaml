# k8s/mariadb-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  labels:
    app: mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
        - name: mariadb
          image: mariadb:10.6
          ports:
            - containerPort: 3306
          env:
            - name: MARIADB_ROOT_PASSWORD
              value: rootpass
            - name: MARIADB_DATABASE
              value: WebSearch
            - name: MARIADB_USER
              value: WebSearch
            - name: MARIADB_PASSWORD
              value: WebSearch123!
          volumeMounts:
            - name: mariadb-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mariadb-data
          emptyDir: {}   # 生产建议换为 PersistentVolumeClaim
---
apiVersion: v1
kind: Service
metadata:
  name: mariadb
spec:
  selector:
    app: mariadb
  ports:
    - port: 3306
      targetPort: 3306
  type: ClusterIP
---
# 初始化数据库的Job，用于执行初始化SQL脚本
apiVersion: batch/v1
kind: Job
metadata:
  name: mariadb-init-job
spec:
  template:
    spec:
      containers:
        - name: mariadb-init
          image: mariadb:10.6
          command: [ "sh", "-c" ]
          args:
            - >
              echo "初始化数据库...";
              mysql -h mariadb -P 3306 -u WebSearch -pWebSearch123! WebSearch < /init_db/create_user_database.sql;
          volumeMounts:
            - name: init-sql
              mountPath: /init_db
          env:
            - name: MYSQL_PWD
              value: WebSearch123!
      restartPolicy: OnFailure
      volumes:
        - name: init-sql
          configMap:
            name: init-db-sql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-db-sql
data:
  create_user_database.sql: |
    # 在这里放入你的 SQL 脚本内容
    CREATE TABLE user (
                          id BIGINT AUTO_INCREMENT PRIMARY KEY,
                          username VARCHAR(50) NOT NULL,
                          password VARCHAR(255) NOT NULL,
                          email VARCHAR(100) NOT NULL UNIQUE,
                          last_login DATETIME,
                          created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
                          is_verified BOOLEAN NOT NULL DEFAULT TRUE,
                          is_active BOOLEAN NOT NULL DEFAULT TRUE
    );
    CREATE TABLE search_history (
                                    id BIGINT AUTO_INCREMENT PRIMARY KEY,
                                    user_id BIGINT NOT NULL,
                                    query VARCHAR(255) NOT NULL,
                                    searched_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                    FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE
    );
    CREATE TABLE user_search_count (
                                       id BIGINT AUTO_INCREMENT PRIMARY KEY,
                                       user_id BIGINT NOT NULL,
                                       keyword VARCHAR(255) NOT NULL,
                                       search_count INT NOT NULL DEFAULT 0,
                                       last_searched_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                       FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE,
                                       UNIQUE (user_id, keyword)
    );
    CREATE INDEX idx_user_search_count_user_id ON user_search_count(user_id);
    CREATE INDEX idx_search_history_user_id ON search_history(user_id);
    CREATE TABLE bookmark (
                              id BIGINT AUTO_INCREMENT PRIMARY KEY,
                              user_id BIGINT NOT NULL,
                              url VARCHAR(255) NOT NULL,
                              tag VARCHAR(100),
                              created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
                              click_count INT NOT NULL DEFAULT 0,
                              FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE,
                              UNIQUE (user_id, url)
    );
    CREATE INDEX idx_bookmark_user_id ON bookmark(user_id);
